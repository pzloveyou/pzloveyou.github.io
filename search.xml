<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Font-matter</title>
      <link href="20220624/Front-matter/"/>
      <url>20220624/Front-matter/</url>
      
        <content type="html"><![CDATA[<div class="note info disabled"><p>转载自大佬：<a href="https://butterfly.js.org/posts/dc584b87/#Post-Front-matter">Jerry</a></p></div><div class="note info modern"><p>Front-matter 是 markdown 文件最上方以 — 分隔的区域，用于指定个别別档案的变数。</p></div><h3 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span></span><br><span class="line"><span class="attr">date:</span></span><br><span class="line"><span class="attr">updated:</span></span><br><span class="line"><span class="attr">type:</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">top_img:</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line"><span class="attr">aside:</span></span><br><span class="line"><span class="attr">aplayer:</span></span><br><span class="line"><span class="attr">highlight_shrink:</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">写法</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">【必需】页面标题</td></tr><tr><td align="left">date</td><td align="left">【必需】页面创建日期</td></tr><tr><td align="left">type</td><td align="left">【必需】标籤、分类和友情链接三个页面需要配置</td></tr><tr><td align="left">updated</td><td align="left">【可选】页面更新日期</td></tr><tr><td align="left">description</td><td align="left">【可选】页面描述</td></tr><tr><td align="left">keywords</td><td align="left">【可选】页面关键字</td></tr><tr><td align="left">comments</td><td align="left">【可选】显示页面评论模块(默认 true)</td></tr><tr><td align="left">top_img</td><td align="left">【可选】页面顶部图片</td></tr><tr><td align="left">mathjax</td><td align="left">【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="left">katex</td><td align="left">【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="left">aside</td><td align="left">【可选】显示侧边栏 (默认 true)</td></tr><tr><td align="left">aplayer</td><td align="left">【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td align="left">highlight_shrink</td><td align="left">【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr></tbody></table><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">toc<span class="emphasis">_style_</span>simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">aside:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">写法</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">【必需】文章标题</td></tr><tr><td align="left">date</td><td align="left">【必需】文章创建日期</td></tr><tr><td align="left">updated</td><td align="left">【可选】文章更新日期</td></tr><tr><td align="left">tags</td><td align="left">【可选】文章标籤</td></tr><tr><td align="left">categories</td><td align="left">【可选】文章分类</td></tr><tr><td align="left">keywords</td><td align="left">【可选】文章关键字</td></tr><tr><td align="left">description</td><td align="left">【可选】文章描述</td></tr><tr><td align="left">top_img</td><td align="left">【可选】文章顶部图片</td></tr><tr><td align="left">cover</td><td align="left">【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</td></tr><tr><td align="left">comments</td><td align="left">【可选】显示文章评论模块(默认 true)</td></tr><tr><td align="left">toc</td><td align="left">【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td align="left">toc_number</td><td align="left">【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td align="left">toc_style_simple</td><td align="left">【可选】显示 toc 简洁模式</td></tr><tr><td align="left">copyright</td><td align="left">【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td align="left">copyright_author</td><td align="left">【可选】文章版权模块的文章作者</td></tr><tr><td align="left">copyright_author_href</td><td align="left">【可选】文章版权模块的文章作者链接</td></tr><tr><td align="left">copyright_url</td><td align="left">【可选】文章版权模块的文章连结链接</td></tr><tr><td align="left">copyright_info</td><td align="left">【可选】文章版权模块的版权声明文字</td></tr><tr><td align="left">mathjax</td><td align="left">【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="left">katex</td><td align="left">【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="left">aplayer</td><td align="left">【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td align="left">highlight_shrink</td><td align="left">【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td align="left">aside</td><td align="left">【可选】显示侧边栏 (默认 true)</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git命令合集</title>
      <link href="20220622/git/"/>
      <url>20220622/git/</url>
      
        <content type="html"><![CDATA[<h1 id="Git从入门到精通"><a href="#Git从入门到精通" class="headerlink" title="Git从入门到精通"></a>Git从入门到精通</h1><h2 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h2><p>Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。</p><p><strong>Git的特点</strong></p><ul><li>分支更快、更容易。</li><li>支持离线工作；本地提交可以稍后提交到服务器上。</li><li>Git 提交都是原子的，且是整个项目范围的，而不像 CVS 中一样是对每个文件的。</li><li>Git 中的每个工作树都包含一个具有完整项目历史的仓库。</li><li>没有哪一个 Git 仓库会天生比其他仓库更重要。</li></ul><p>Git 是用于 Linux内核开发的版本控制工具。与常用的版本控制工具  CVS, Subversion  等不同，它采用了分布式版本库的方式，不必服务器端软件支持（wingeddevil注：这得分是用什么样的服务端，使用http协议或者git协议等不太一样。并且在push和pull的时候和服务器端还是有交互的。），使源代码的发布和交流极其方便。 Git 的速度很快，这对于诸如 Linux kernel 这样的大项目来说自然很重要。 Git 最为出色的是它的合并跟踪（merge tracing）能力。</p><p>实际上内核开发团队决定开始开发和使用  Git 来作为内核开发的版本控制系统的时候，世界开源社群的反对声音不少，最大的理由是 Git 太艰涩难懂，从 Git  的内部工作机制来说，的确是这样。但是随着开发的深入，Git 的正常使用都由一些友好的脚本命令来执行，使 Git  变得非常好用，即使是用来管理我们自己的开发项目，Git 都是一个友好，有力的工具。现在，越来越多的著名项目采用 Git 来管理项目开发。</p><p><strong>Git 与 SVN 区别</strong></p><ul><li>GIT是分布式的，SVN不是</li><li>GIT把内容按元数据方式存储，而SVN是按文件</li><li>GIT分支和SVN的分支不同</li><li>GIT没有一个全局的版本号，而SVN有</li><li>GIT的内容完整性要优于SVN</li></ul><p><strong>Git的缺点</strong></p><ul><li>学习资料少。</li><li>学习周期相对而言比较长。</li><li>不符合常规思维。</li><li>代码保密性差。</li></ul><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>肯定是装window版本</p><p>下载地址:<a href="https://git-scm.com/downloads%EF%BC%88%E5%AE%98%E7%BD%91%EF%BC%89">https://git-scm.com/downloads（官网）</a></p><p><img src= "/img/loading.gif" data-lazy-src="git/1594642377861.png" alt="1594642377861"></p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>步骤省略….</p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><ul><li>配置git</li></ul><p>Git 全局设置:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;ange&quot;</span><br><span class="line">git config --global user.email &quot;1351261434@qq.com&quot;</span><br></pre></td></tr></table></figure><ul><li>实战</li></ul><p>配置idea中的过滤文件</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*.hprof;*.idea;*.iml;*.pyc;*.pyo;*.rbc;*.yarb;*~;.DS<span class="built_in">_</span>Store;.git;.hg;.svn;CVS;<span class="built_in">_</span><span class="built_in">_</span>pycache<span class="built_in">_</span><span class="built_in">_</span>;<span class="built_in">_</span>svn;target;vssver.scc;vssver2.scc;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="git/1594643447481.png" alt="1594643447481"></p><ul><li>Git常用命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">初始化git仓库</span></span><br><span class="line">git init</span><br><span class="line"><span class="meta">#</span><span class="bash">查看git文件状态(查看文件是否被git追踪)</span></span><br><span class="line">git status</span><br><span class="line"><span class="meta">#</span><span class="bash">查看所有本地分支 前面带有*号的是当前分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="meta">#</span><span class="bash">查看所有远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"><span class="meta">#</span><span class="bash">查看所有本地和远程分支</span></span><br><span class="line">git branch -a</span><br><span class="line"><span class="meta">#</span><span class="bash">创建分支</span></span><br><span class="line">git branch 分支名</span><br><span class="line"><span class="meta">#</span><span class="bash">切换分支</span></span><br><span class="line">git checkout 分支名、</span><br><span class="line"><span class="meta">#</span><span class="bash">切换分支并且转换过去</span></span><br><span class="line">git checkout -b 新分支名</span><br><span class="line"><span class="meta">#</span><span class="bash">分支模糊查找</span></span><br><span class="line">git branch | grep 分支名</span><br><span class="line"><span class="meta">#</span><span class="bash">删除本地分支（D 强制）</span></span><br><span class="line">git branch -D 分支名</span><br><span class="line"><span class="meta">#</span><span class="bash">删除远程分支</span></span><br><span class="line">git push origin --delete 分支名</span><br><span class="line"><span class="meta">#</span><span class="bash">如果没有被追踪</span></span><br><span class="line">git add &lt;file&gt;...</span><br><span class="line">git add pom.xml</span><br><span class="line"><span class="meta">#</span><span class="bash">撤销追踪</span></span><br><span class="line">git rm --cached &lt;file&gt;</span><br><span class="line">git rm --cached pom.xml</span><br><span class="line"><span class="meta">#</span><span class="bash">全部进行追踪</span></span><br><span class="line">git add .</span><br><span class="line"><span class="meta">#</span><span class="bash">提交到本地仓库</span></span><br><span class="line">git commit -m &quot;提交的消息&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">查看是否配置远程仓库</span></span><br><span class="line">git remote -v</span><br><span class="line"><span class="meta">#</span><span class="bash">设置远程仓库地址</span></span><br><span class="line">git remote add origin https://gitee.com/AngeGit/springboot_miaosha.git</span><br><span class="line"><span class="meta">#</span><span class="bash">提交到远程仓库</span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="meta">#</span><span class="bash">第一次使用仓库需要先pull再push 所以这个时候可以进行强制合并，用下边的方式就OK了。</span></span><br><span class="line">//把远程仓库和本地同步，消除差异</span><br><span class="line">git pull origin master --allow-unrelated-histories </span><br><span class="line"><span class="meta">#</span><span class="bash">删除缓存区指定文件</span></span><br><span class="line">git rm --cached readme.txt</span><br><span class="line"><span class="meta">#</span><span class="bash">清空缓存区</span></span><br><span class="line"> rm .git/index</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">克隆远程地址的项目</span></span><br><span class="line">git clone https://gitee.com/AngeGit/springboot_miaosha.git</span><br><span class="line"><span class="meta">#</span><span class="bash">重复上述步骤</span></span><br><span class="line"><span class="meta">#</span><span class="bash">拉取远程仓库的代码</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="IDEA操作git"><a href="#IDEA操作git" class="headerlink" title="IDEA操作git"></a>IDEA操作git</h2><h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">提交代码</span></span><br><span class="line">git add .</span><br><span class="line"><span class="meta">#</span><span class="bash">提交到本地仓库</span></span><br><span class="line">git commit -m &quot;消息&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">查看是否有远程仓库</span></span><br><span class="line">git remote -v</span><br><span class="line"><span class="meta">#</span><span class="bash">提交到远程仓库</span></span><br><span class="line">git push -u origin test</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">修改远程仓库地址</span></span><br><span class="line">git remote set-url origin 远程仓库地址</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">切换分支</span></span><br><span class="line">git branch</span><br><span class="line">git checkout master</span><br><span class="line"><span class="meta">#</span><span class="bash">合并</span></span><br><span class="line">git merge test</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-Plus笔记</title>
      <link href="20220622/mybatiis_plus/"/>
      <url>20220622/mybatiis_plus/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis-Plus"><a href="#Mybatis-Plus" class="headerlink" title="Mybatis-Plus"></a>Mybatis-Plus</h1><blockquote><p><strong>此版本为Mybatis-Plus(3.0.5)+Spring-Boot(2.6.3)<strong>；</strong>新版本为Mybatis-Plus(3.0.5)，SpringBoot不变</strong></p></blockquote><p><a href="https://github.com/baomidou/mybatis-plus">MyBatis-Plus (opens new window)</a>（简称 MP）是一个 <a href="https://www.mybatis.org/mybatis-3/">MyBatis (opens new window)</a>的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><ul><li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li><li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li><strong>内置性能分析插件</strong>：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li></ul><h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><p>1.创建数据库mybatis-plus</p><p>2.新建User表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line">id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">age <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">email <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (id, name, age, email) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;Jone&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;test1@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;test2@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="number">28</span>, <span class="string">&#x27;test3@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;Sandy&#x27;</span>, <span class="number">21</span>, <span class="string">&#x27;test4@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;Billie&#x27;</span>, <span class="number">24</span>, <span class="string">&#x27;test5@baomidou.com&#x27;</span>);</span><br></pre></td></tr></table></figure><p>3.编写项目。初始化项目，springboot</p><p>4.配置数据库源</p><p>5.pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--     mybatis-plus核心--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        代码生成--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        代码生成模板--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        sql打印分析--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>p6spy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>p6spy<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>…….省略</p><h1 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h1><p>1.配置文件添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><h1 id="CRUD扩展"><a href="#CRUD扩展" class="headerlink" title="CRUD扩展"></a>CRUD扩展</h1><p>简单操作不用再写sql，直接使用mybatis-plus封装的方法即可完成简单的crud操作。</p><p>Mapper继承BaseMapp<T>;T代表泛型</p><h2 id="CRUD测试"><a href="#CRUD测试" class="headerlink" title="CRUD测试"></a>CRUD测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="comment">//参数Wrapper，条件构造器</span></span><br><span class="line">       <span class="comment">//查询全部用户</span></span><br><span class="line">       List&lt;User&gt; users = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">       users.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//测试插入</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span></span>&#123;</span><br><span class="line">       User user=<span class="keyword">new</span> User();</span><br><span class="line">       user.setName(<span class="string">&quot;pzy&quot;</span>);</span><br><span class="line">       user.setAge(<span class="number">1</span>);</span><br><span class="line">       user.setEmail(<span class="string">&quot;2831053223@qq.com&quot;</span>);</span><br><span class="line">       <span class="keyword">int</span> result=userMapper.insert(user);  <span class="comment">//自动生成id</span></span><br><span class="line">       System.out.println(result);</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">//测试更新</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span></span>&#123;</span><br><span class="line">       User user=<span class="keyword">new</span> User();</span><br><span class="line">       user.setId(<span class="number">5L</span>);</span><br><span class="line">       user.setName(<span class="string">&quot;pzy&quot;</span>);</span><br><span class="line">       user.setAge(<span class="number">1</span>);</span><br><span class="line">       user.setEmail(<span class="string">&quot;2831053223@qq.com&quot;</span>);</span><br><span class="line">       <span class="keyword">int</span> result=userMapper.updateById(user);</span><br><span class="line">       System.out.println(result);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//测试删除</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span></span>&#123;</span><br><span class="line">       User user=<span class="keyword">new</span> User();</span><br><span class="line">       user.setId(<span class="number">5L</span>);</span><br><span class="line">       <span class="keyword">int</span> result=userMapper.deleteById(user);</span><br><span class="line">       System.out.println(result);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="主键生成策略"><a href="#主键生成策略" class="headerlink" title="主键生成策略"></a>主键生成策略</h2><p>​    <strong>雪花算法</strong>:</p><ul><li><p>​    snowflake ………</p></li><li><p>​    实体类 @TableId(type = IdType.ID_WORKER) :全局唯一ID;   @TableId(type = IdType.AUTO):自增</p><blockquote><p>其他源码解释</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">IdType</span> </span>&#123;</span><br><span class="line">    AUTO(<span class="number">0</span>),   <span class="comment">//数据库自增id</span></span><br><span class="line">    NONE(<span class="number">1</span>),    <span class="comment">//未设置主键</span></span><br><span class="line">    INPUT(<span class="number">2</span>),    <span class="comment">//手动输入</span></span><br><span class="line">    ID_WORKER(<span class="number">3</span>),   <span class="comment">//默认得全局唯一id</span></span><br><span class="line">    UUID(<span class="number">4</span>),          <span class="comment">//全局唯一id  uuid</span></span><br><span class="line">    ID_WORKER_STR(<span class="number">5</span>);    <span class="comment">//字符串表示法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a>自动填充</h2><p>创建时间，修改时间！都是自动完成填充.</p><p>阿里巴巴开发手册：所有数据库：gmt_create , gmt_modified几乎所有表要具备,而且自动化.</p><blockquote><h4 id="方式一：数据库级别"><a href="#方式一：数据库级别" class="headerlink" title="方式一：数据库级别"></a>方式一：数据库级别</h4></blockquote><p>​    1.在表中新增字段create_time,update_time;配置默认值</p><p>​    2.再次新增 </p><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Date createTime;</span><br><span class="line"><span class="keyword">private</span> Date updateTime;</span><br></pre></td></tr></table></figure></blockquote><blockquote><h4 id="方式二：代码级别"><a href="#方式二：代码级别" class="headerlink" title="方式二：代码级别"></a>方式二：代码级别</h4></blockquote><p>​    1.删除数据库默认值</p><p>​    2.实体类添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字段添加填充内容</span></span><br><span class="line">  <span class="meta">@TableField(fill= FieldFill.INSERT)</span></span><br><span class="line">  <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@TableField(fill= FieldFill.INSERT_UPDATE)</span></span><br><span class="line">  <span class="keyword">private</span> Date updateTime;</span><br></pre></td></tr></table></figure><p>​    3.编写处理器来处理这个注解</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增填充策略</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metaObject</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;start insert fill......&quot;</span>);</span><br><span class="line">        <span class="comment">//设置字段值</span></span><br><span class="line">        <span class="comment">//setFieldValByName(String fieldName, Object fieldVal, MetaObject metaObject)</span></span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;createTime&quot;</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新填充策略</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metaObject</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;start update fill......&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h2><p>其实是一种概念。</p><blockquote><p>乐观锁：认为不会出现问题，无论做什么都不上锁，如果出了问题，再上锁去操作；比如一个心很大得人</p><p>悲观锁：认为做什么都会出现问题，无论干什么都会上锁，再去操作；比如一个很谨慎的人</p></blockquote><p>乐观锁机制!</p><h5 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h5><ul><li><p>取出记录时，获取当前version</p></li><li><p>更新时，带上这个version</p></li><li><p>执行更新时， set version = newVersion where version = oldVersion</p></li><li><p>如果version不对，就更新失败</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">乐观锁：<span class="number">1.</span>先查询，获取版本号 version<span class="operator">=</span><span class="number">1</span></span><br><span class="line">A线程 </span><br><span class="line">update <span class="keyword">user</span> <span class="keyword">set</span>  name<span class="operator">=</span>&quot;122&quot;, version<span class="operator">=</span>version<span class="operator">+</span><span class="number">1</span> <span class="keyword">where</span>  id<span class="operator">=</span><span class="number">2</span> <span class="keyword">and</span> version<span class="operator">=</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line">   B线程   线程抢先完成，这个时候version<span class="operator">=</span><span class="number">2</span>，会导致B修改不成功<span class="operator">!</span></span><br><span class="line">update <span class="keyword">user</span> <span class="keyword">set</span>  name<span class="operator">=</span>&quot;122&quot;, version<span class="operator">=</span>version<span class="operator">+</span><span class="number">1</span> <span class="keyword">where</span>  id<span class="operator">=</span><span class="number">2</span> <span class="keyword">and</span> version<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p>测试MP的乐观锁插件</p></blockquote><p>1.数据库添加version</p><p>2.实体类添加字段及注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Version</span>  <span class="comment">//乐观锁version注解</span></span><br><span class="line"><span class="keyword">private</span> Integer version;</span><br></pre></td></tr></table></figure><p>3.添加乐观锁插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MapperScan(&quot;com.my.mybatis_plus.mapper&quot;)</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span>  <span class="comment">// 启注解事务管理，等同于xml配置方式的 &lt;tx:annotation-driven /&gt;</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfig</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//注册乐观锁插件</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title">optimisticLockerInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OptimisticLockerInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试乐观锁成功</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testOptimisticLocker</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//1.查询用户信息</span></span><br><span class="line">    User user=userMapper.selectById(<span class="number">1L</span>);</span><br><span class="line">    <span class="comment">//2.修改用户信息</span></span><br><span class="line">    user.setName(<span class="string">&quot;虾仁&quot;</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;虾仁.com&quot;</span>);</span><br><span class="line">    <span class="comment">//3.执行更新操作</span></span><br><span class="line">    userMapper.updateById(user);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试乐观锁失败</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testOptimisticLocker2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//线程1</span></span><br><span class="line">    User user=userMapper.selectById(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;虾仁一号&quot;</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;324234.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//线程2 执行插队操作</span></span><br><span class="line">    User user2=userMapper.selectById(<span class="number">1L</span>);</span><br><span class="line">    user2.setName(<span class="string">&quot;虾仁二号&quot;</span>);</span><br><span class="line">    user2.setEmail(<span class="string">&quot;324234.com&quot;</span>);</span><br><span class="line">    userMapper.updateById(user2);</span><br><span class="line">    <span class="comment">//如果没有乐观锁就会覆盖插队线程的值！</span></span><br><span class="line">    <span class="comment">//可以使用自旋锁多次尝试提交</span></span><br><span class="line">    userMapper.updateById(user);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><blockquote><p>version:作为乐观锁的一种条件限制；</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">如上乐观锁失败执行的<span class="keyword">sql</span>日志：</span><br><span class="line">        <span class="number">1.</span><span class="keyword">user</span>查询</span><br><span class="line">        <span class="keyword">SELECT</span> id,name,age,email,version,create_time,update_time <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> id<span class="operator">=</span>? </span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">&gt;</span> Parameters: <span class="number">1</span>(Long)</span><br><span class="line"><span class="operator">&lt;=</span><span class="operator">=</span>    Columns: id, name, age, email, version, create_time, update_time</span><br><span class="line"><span class="operator">&lt;=</span><span class="operator">=</span>        <span class="type">Row</span>: <span class="number">1</span>, 虾仁, <span class="number">18</span>, 虾仁.com, <span class="number">2</span>, <span class="keyword">null</span>, <span class="number">2022</span><span class="number">-02</span><span class="number">-22</span> <span class="number">14</span>:<span class="number">04</span>:<span class="number">37</span></span><br><span class="line"><span class="operator">&lt;=</span><span class="operator">=</span>      Total: <span class="number">1</span></span><br><span class="line">        <span class="number">2.</span>user2查询</span><br><span class="line">            <span class="keyword">SELECT</span> id,name,age,email,version,create_time,update_time <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> id<span class="operator">=</span>? </span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">&gt;</span> Parameters: <span class="number">1</span>(Long)</span><br><span class="line"><span class="operator">&lt;=</span><span class="operator">=</span>    Columns: id, name, age, email, version, create_time, update_time</span><br><span class="line"><span class="operator">&lt;=</span><span class="operator">=</span>        <span class="type">Row</span>: <span class="number">1</span>, 虾仁, <span class="number">18</span>, 虾仁.com, <span class="number">2</span>, <span class="keyword">null</span>, <span class="number">2022</span><span class="number">-02</span><span class="number">-22</span> <span class="number">14</span>:<span class="number">04</span>:<span class="number">37</span></span><br><span class="line"><span class="operator">&lt;=</span><span class="operator">=</span>      Total: <span class="number">1</span></span><br><span class="line">        <span class="number">3.</span>user2修改</span><br><span class="line">            UPDATE <span class="keyword">user</span> <span class="keyword">SET</span> name<span class="operator">=</span>?, age<span class="operator">=</span>?, email<span class="operator">=</span>?, version<span class="operator">=</span>?, update_time<span class="operator">=</span>? <span class="keyword">WHERE</span> id<span class="operator">=</span>? <span class="keyword">AND</span> version<span class="operator">=</span>? </span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">&gt;</span> Parameters: 虾仁二号(String), <span class="number">18</span>(<span class="type">Integer</span>), <span class="number">324234.</span>com(String), <span class="number">3</span>(<span class="type">Integer</span>), <span class="number">2022</span><span class="number">-02</span><span class="number">-22</span> <span class="number">14</span>:<span class="number">07</span>:<span class="number">04.081</span>(<span class="type">Timestamp</span>), <span class="number">1</span>(Long), <span class="number">2</span>(<span class="type">Integer</span>)</span><br><span class="line"><span class="operator">&lt;=</span><span class="operator">=</span>    Updates: <span class="number">1</span></span><br><span class="line">        <span class="number">4.</span><span class="keyword">user</span>修改(因为version已修改为<span class="number">3</span>，导致<span class="keyword">user</span>修改失败;如没有此version乐观锁限制,这一步将会覆盖上一步修改)   </span><br><span class="line">            UPDATE <span class="keyword">user</span> <span class="keyword">SET</span> name<span class="operator">=</span>?, age<span class="operator">=</span>?, email<span class="operator">=</span>?, version<span class="operator">=</span>?, update_time<span class="operator">=</span>? <span class="keyword">WHERE</span> id<span class="operator">=</span>? <span class="keyword">AND</span> version<span class="operator">=</span>? </span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">&gt;</span> Parameters: 虾仁一号(String), <span class="number">18</span>(<span class="type">Integer</span>), <span class="number">324234.</span>com(String), <span class="number">3</span>(<span class="type">Integer</span>), <span class="number">2022</span><span class="number">-02</span><span class="number">-22</span> <span class="number">14</span>:<span class="number">07</span>:<span class="number">04.089</span>(<span class="type">Timestamp</span>), <span class="number">1</span>(Long), <span class="number">2</span>(<span class="type">Integer</span>)</span><br><span class="line"><span class="operator">&lt;=</span><span class="operator">=</span>    Updates: <span class="number">0</span>   </span><br></pre></td></tr></table></figure><h2 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试查询</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectById</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user=userMapper.selectById(<span class="number">1L</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//批量查询</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectBatchIds</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List&lt;User&gt; user=userMapper.selectBatchIds(Arrays.asList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">    user.forEach(System.out::println);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//条件查询map</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectByMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">    HashMap&lt;String, Object&gt; stringObjectHashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">//自定义查询</span></span><br><span class="line">    stringObjectHashMap.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;虾仁二号&quot;</span>);</span><br><span class="line">    List&lt;User&gt; user=userMapper.selectByMap(stringObjectHashMap);</span><br><span class="line">    user.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><p>1.原始的limit进行分页</p><p>2.pageHelpere第三方插件</p><p>3.MP其实内置了分页插件</p><blockquote><p>如何使用</p></blockquote><p>1.配置分页拦截器主键</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MapperScan(&quot;com.my.mybatis_plus.mapper&quot;)</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span> <span class="comment">// 启注解事务管理，等同于xml配置方式的 &lt;tx:annotation-driven /&gt;</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册乐观锁插件</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title">optimisticLockerInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OptimisticLockerInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分页注册</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.直接使用Page对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试分页查询</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPage</span><span class="params">()</span></span>&#123;</span><br><span class="line">      Page&lt;User&gt; page=<span class="keyword">new</span> Page&lt;&gt;(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line">      userMapper.selectPage(page,<span class="keyword">null</span>);</span><br><span class="line">      page.getRecords().forEach(System.out::print);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//批量删除</span></span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteBatchId</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="keyword">int</span> result=userMapper.deleteBatchIds(Arrays.asList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">     System.out.println(result);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//通过map删除</span></span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">     HashMap&lt;String, Object&gt; stringObjectHashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">     stringObjectHashMap.put(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">     <span class="keyword">int</span> result=userMapper.deleteByMap(stringObjectHashMap);</span><br><span class="line">     System.out.println(result);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="逻辑删除"><a href="#逻辑删除" class="headerlink" title="逻辑删除"></a>逻辑删除</h2><blockquote><p>物理删除：从数据库中直接移除</p><p>逻辑删除：在数据库中没有被移除，而是通过一个变量让他失效! deleted=0=&gt;deleted=1</p></blockquote><p>1.表中添加deleted字段</p><p>2.实体类添加字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span>  <span class="comment">//逻辑删除</span></span><br><span class="line"><span class="keyword">private</span> Integer deleted;</span><br></pre></td></tr></table></figure><p>3.配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑删除配置</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ISqlInjector <span class="title">sqlInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> LogicSqlInjector();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#逻辑删除配置</span></span><br><span class="line"><span class="string">mybatis-plus.global-config.db-config.logic-delete-value=1</span>  <span class="comment"># 逻辑已删除值(默认为 1)</span></span><br><span class="line"><span class="string">mybatis-plus.global-config.db-config.logic-not-delete-value=0</span>  <span class="comment"># 逻辑未删除值(默认为 0)</span></span><br></pre></td></tr></table></figure><p>说明:</p><p>只对自动注入的sql起效:</p><ul><li>插入: 不作限制</li><li>查找: 追加where条件过滤掉已删除数据,且使用 wrapper.entity 生成的where条件会忽略该字段</li><li>更新: 追加where条件防止更新到已删除数据,且使用 wrapper.entity 生成的where条件会忽略该字段</li><li>删除: 转变为 更新</li></ul><p>例如:</p><ul><li>删除: <code>update user set deleted=1 where id = 1 and deleted=0</code></li><li>查找: <code>select id,name,deleted from user where deleted=0</code></li></ul><h2 id="SQL性能分析打印插件"><a href="#SQL性能分析打印插件" class="headerlink" title="SQL性能分析打印插件"></a>SQL性能分析打印插件</h2><blockquote><h4 id="旧版"><a href="#旧版" class="headerlink" title="旧版"></a>旧版</h4></blockquote><p>1.导入插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * sql执行效率插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@Profile(&#123;&quot;dev&quot;,&quot;test&quot;&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PerformanceInterceptor <span class="title">performanceInterceptor</span><span class="params">()</span></span>&#123;</span><br><span class="line">    PerformanceInterceptor performanceInterceptor = <span class="keyword">new</span> PerformanceInterceptor();</span><br><span class="line">    <span class="comment">// ms 设置sql最大执行时间,超过不执行</span></span><br><span class="line">    performanceInterceptor.setMaxTime(<span class="number">100</span>);</span><br><span class="line">    <span class="comment">//sql格式化</span></span><br><span class="line">    performanceInterceptor.setFormat(<span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span> performanceInterceptor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最好只在SpringBoot中配置环境为dev或者test使用！提高开发效率</p><blockquote><h4 id="新版"><a href="#新版" class="headerlink" title="新版"></a>新版</h4></blockquote><p><strong>1.添加依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        sql打印分析--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>p6spy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>p6spy<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2.application.yml配置</strong></p><p>​     数据库配置修改:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#修改前</span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line">    url: jdbc:mysql://localhost:3306/mybatis_plus?useSSL=false&amp;useUnicode=tru&amp;characterEncoding=utf-            8&amp;serverTimezone=GMT%2B8&amp;allowMultiQueries=true</span><br><span class="line"></span><br><span class="line">#修改后：</span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.p6spy.engine.spy.P6SpyDriver</span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line">    url: jdbc:p6spy:mysql://localhost:3306/mybatis_plus?useSSL=false&amp;useUnicode=tru&amp;characterEncoding=utf-            8&amp;serverTimezone=GMT%2B8&amp;allowMultiQueries=true</span><br></pre></td></tr></table></figure><p>3.创建spy.properties文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#3.2.1以上使用</span><br><span class="line">modulelist=com.baomidou.mybatisplus.extension.p6spy.MybatisPlusLogFactory,com.p6spy.engine.outage.P6OutageFactory</span><br><span class="line">#3.2.1以下使用或者不配置</span><br><span class="line">#modulelist=com.p6spy.engine.logging.P6LogFactory,com.p6spy.engine.outage.P6OutageFactory</span><br><span class="line"># 自定义日志打印</span><br><span class="line">logMessageFormat=com.baomidou.mybatisplus.extension.p6spy.P6SpyLogger</span><br><span class="line">#日志输出到控制台</span><br><span class="line">appender=com.baomidou.mybatisplus.extension.p6spy.StdoutLogger</span><br><span class="line"># 使用日志系统记录 sql</span><br><span class="line">#appender=com.p6spy.engine.spy.appender.Slf4JLogger</span><br><span class="line"># 设置 p6spy driver 代理</span><br><span class="line">deregisterdrivers=true</span><br><span class="line"># 取消JDBC URL前缀</span><br><span class="line">useprefix=true</span><br><span class="line"># 配置记录 Log 例外,可去掉的结果集有error,info,batch,debug,statement,commit,rollback,result,resultset.</span><br><span class="line">excludecategories=info,debug,result,commit,resultset</span><br><span class="line"># 日期格式</span><br><span class="line">dateformat=yyyy-MM-dd HH:mm:ss</span><br><span class="line"># 实际驱动可多个</span><br><span class="line">#driverlist=org.h2.Driver</span><br><span class="line"># 是否开启慢SQL记录</span><br><span class="line">outagedetection=true</span><br><span class="line"># 慢SQL记录标准 2 秒</span><br><span class="line">outagedetectioninterval=2</span><br></pre></td></tr></table></figure><h2 id="条件查询Wrapper"><a href="#条件查询Wrapper" class="headerlink" title="条件查询Wrapper"></a>条件查询Wrapper</h2><p>用来写一些复杂的sql</p><p>1.测试一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询name不为空，email不为空，age大于等于20</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selecteWrapper</span><span class="params">()</span></span>&#123;</span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper=<span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.isNotNull(<span class="string">&quot;name&quot;</span>)    <span class="comment">//is not null</span></span><br><span class="line">            .isNotNull(<span class="string">&quot;email&quot;</span>)  <span class="comment">//is not null</span></span><br><span class="line">            .ge(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>);       <span class="comment">//&gt;=</span></span><br><span class="line">    userMapper.selectList(wrapper).forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.测试二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">          <span class="comment">//查询name</span></span><br><span class="line">      QueryWrapper&lt;User&gt; userQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">      userQueryWrapper.eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;pzy&quot;</span>);</span><br><span class="line">      User user = userMapper.selectOne(userQueryWrapper);</span><br><span class="line">      System.out.println(user);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>3.测试三</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="comment">//查询年龄20到30之间</span></span><br><span class="line">     QueryWrapper&lt;User&gt; userQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">     userQueryWrapper.between(<span class="string">&quot;age&quot;</span>,<span class="number">10</span>,<span class="number">30</span>);</span><br><span class="line">     Integer count=userMapper.selectCount(userQueryWrapper);</span><br><span class="line">     System.out.println(count);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>4.测试四</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//模糊查询</span></span><br><span class="line">    QueryWrapper&lt;User&gt; userQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    userQueryWrapper.notLike(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;e&quot;</span>).likeLeft(<span class="string">&quot;email&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    userMapper.selectMaps(userQueryWrapper).forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.测试五</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="comment">//子查询</span></span><br><span class="line">     QueryWrapper&lt;User&gt; userQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">     userQueryWrapper.inSql(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;select id from user where id&gt;2&quot;</span>);</span><br><span class="line">     userMapper.selectObjs(userQueryWrapper).forEach(System.out::println);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="代码生成器"><a href="#代码生成器" class="headerlink" title="代码生成器"></a>代码生成器</h2><p>AutoGenerator 是 MyBatis-Plus 的代码生成器，通过 AutoGenerator 可以快速生成 Entity、Mapper、Mapper XML、Service、Controller 等各个模块的代码，极大的提升了开发效率。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.my.mybatis_plus;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.DateType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> pzy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * 代码自动生成器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeOpen</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//需要构建一个代码自动生成器对象</span></span><br><span class="line">        AutoGenerator auto = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line">        <span class="comment">//全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String property = System.getProperty(<span class="string">&quot;user.dir&quot;</span>);   <span class="comment">//获取项目路径</span></span><br><span class="line">        gc.setOutputDir(property + <span class="string">&quot;/src/main/java&quot;</span>);</span><br><span class="line">        gc.setFileOverride(<span class="keyword">false</span>);  <span class="comment">//是否覆盖</span></span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);  <span class="comment">//去Service的I前缀</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER);   <span class="comment">//主键生成方式</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line">        gc.setSwagger2(<span class="keyword">true</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;pzy&quot;</span>);  <span class="comment">//标记作者名称</span></span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>); <span class="comment">//是否打开资源管理器</span></span><br><span class="line">        auto.setGlobalConfig(gc);</span><br><span class="line">        <span class="comment">//数据源配置</span></span><br><span class="line">        DataSourceConfig dc=<span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis_plus?useSSL=false&amp;useUnicode=tru&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8&amp;allowMultiQueries=true&quot;</span>);</span><br><span class="line">        <span class="comment">//dc.setSchemaName(&quot;mybatis_plus&quot;);</span></span><br><span class="line">        dc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dc.setDbType(DbType.MYSQL);</span><br><span class="line">        auto.setDataSource(dc);</span><br><span class="line">        <span class="comment">//包配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setModuleName(<span class="string">&quot;moudle&quot;</span>);     <span class="comment">//父类包名</span></span><br><span class="line">        pc.setParent(<span class="string">&quot;com.my.mybatis_plus&quot;</span>);  <span class="comment">//包路径</span></span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        auto.setPackageInfo(pc);</span><br><span class="line">        <span class="comment">//策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategy.setInclude(<span class="string">&quot;user&quot;</span>);   <span class="comment">//设置要映射的表,可以多个</span></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);  <span class="comment">//表名下划线转驼峰</span></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);   <span class="comment">//列下划线转驼峰</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>);   <span class="comment">//自动lombok</span></span><br><span class="line">        strategy.setLogicDeleteFieldName(<span class="string">&quot;deleted&quot;</span>); <span class="comment">//配置逻辑删除字段</span></span><br><span class="line">        <span class="comment">//自动填充策略</span></span><br><span class="line">        ArrayList&lt;TableFill&gt; tableFills = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        TableFill createTime = <span class="keyword">new</span> TableFill(<span class="string">&quot;create_time&quot;</span>, FieldFill.INSERT);</span><br><span class="line">        TableFill updateTime = <span class="keyword">new</span> TableFill(<span class="string">&quot;update_time&quot;</span>, FieldFill.INSERT_UPDATE);</span><br><span class="line">        tableFills.add(createTime);</span><br><span class="line">        tableFills.add(updateTime);</span><br><span class="line">        strategy.setTableFillList(tableFills);</span><br><span class="line">        <span class="comment">//乐观锁</span></span><br><span class="line">        strategy.setVersionFieldName(<span class="string">&quot;version&quot;</span>);   <span class="comment">//乐观锁字段</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>);  <span class="comment">//localhost:8080/hello_id_2</span></span><br><span class="line">        auto.setStrategy(strategy);</span><br><span class="line">        <span class="comment">//执行生成</span></span><br><span class="line">        auto.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写于日期：2022-2-22 16:41</p>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongodb 副本集部署</title>
      <link href="20220517/Mongodb-Cluster-deployment/"/>
      <url>20220517/Mongodb-Cluster-deployment/</url>
      
        <content type="html"><![CDATA[<h1 id="Mongodb-副本集部署"><a href="#Mongodb-副本集部署" class="headerlink" title="Mongodb 副本集部署"></a>Mongodb 副本集部署</h1><p><strong>Mongodb 版本&gt;=4.2windows不以服务式安装</strong></p><h4 id="一、安装完成后设置目录下data里面间分区"><a href="#一、安装完成后设置目录下data里面间分区" class="headerlink" title="一、安装完成后设置目录下data里面间分区"></a>一、安装完成后设置目录下data里面间分区</h4><p>1.建立mongodb1文件夹</p><p>2.在mongodb1下建立 conf与log文件夹</p><p>3.在conf文件夹下建立 mongodb.conf</p><p>内容为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dbpath=D:\BtSoft\mongodb\data\mongodb1  #修改路径</span><br><span class="line">logpath=D:\BtSoft\mongodb\data\mongodb1\log\mongodb.log #修改路径</span><br><span class="line">logappend=true</span><br><span class="line">bind_ip=0.0.0.0</span><br><span class="line">port=27011 #修改端口</span><br><span class="line">shardsvr=true</span><br><span class="line">journal=true</span><br><span class="line">replSet=skeqi</span><br></pre></td></tr></table></figure><p>3.复制mongodb1为 mongodb2 mongodb3 并分别修改 mongodb.conf 里的路径与端口（同样操作）</p><h4 id="二、准备启动"><a href="#二、准备启动" class="headerlink" title="二、准备启动"></a>二、准备启动</h4><p>电脑搜索PowerShell，进入到mongod\bin，输入下面（路径按自己实际位置来，以管理员启动需要授权）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongod --config D:\BtSoft\mongodb\data\mongodb1\conf\mongodb.conf --install --serviceName &quot;MongoDB1&quot; --serviceDisplayName &quot;Mongodb1&quot;</span><br><span class="line">mongod --config D:\BtSoft\mongodb\data\mongodb2\conf\mongodb.conf --install --serviceName &quot;MongoDB2&quot; --serviceDisplayName &quot;Mongodb2&quot;</span><br><span class="line">mongod --config D:\BtSoft\mongodb\data\mongodb3\conf\mongodb.conf --install --serviceName &quot;MongoDB3&quot; --serviceDisplayName &quot;Mongodb3&quot;</span><br></pre></td></tr></table></figure><p>然后电脑搜索服务，打开找到对应的3个MongoDB服务，启动并设置自动</p><p>然后重新打开一个cmd（mongod\bin目录下）输入 mongo –port 27011，然后再输入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use admin;</span><br><span class="line">cfg = &#123;_id: &quot;skeqi&quot;,members:[&#123;_id: 0,host: &#x27;127.0.0.1:27011&#x27;,priority: 2&#125;,&#123;_id: 1,host: &#x27;127.0.0.1:27012&#x27;,priority: 1&#125;,&#123;_id: 3,host: &#x27;127.0.0.1:27013&#x27;,arbiterOnly: true&#125;]&#125;;</span><br><span class="line">rs.initiate(cfg)</span><br><span class="line">rs.status()</span><br></pre></td></tr></table></figure><p>中间无任何报错即成功了。</p>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -踩坑 -技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongodb服务教程</title>
      <link href="20220517/Mongod-Server-install/"/>
      <url>20220517/Mongod-Server-install/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Mongodb服务教程"><a href="#1-Mongodb服务教程" class="headerlink" title="1.Mongodb服务教程"></a>1.Mongodb服务教程</h3><p>​    </p><pre><code>进入页面  https://www.mongodb.com/download-center/community ，我安装这个版本</code></pre><p>选择如下：<img src= "/img/loading.gif" data-lazy-src="/./img/mon/20200405141039793.png"></p><p>   下载后文件如右 ： <img src= "/img/loading.gif" data-lazy-src="/./img/mon/20200405141118829.png"></p><p>   双击开始安装（以下几步注意，其他全部next）：</p><img src= "/img/loading.gif" data-lazy-src="/./img/mon/20200405141302768.png" style="zoom:50%;" /><p> 这里我选择的是自定义安装，选择你想安装到的位置</p><img src= "/img/loading.gif" data-lazy-src="/./img/mon/20200405141441759.png" style="zoom:50%;" /><p> 点击ok，然后点击next 点击之后 新版的Mongodb会主动在安装目录下创建log和data文件，这相比较早期版本有了改善 ，早期需要自己手动创建  <strong>但我们仍然需要在data下创建db文件夹   笔者的在E:\MongoDB\data\db（记住一定要再建个db文件夹）</strong></p><p><img src= "/img/loading.gif" data-lazy-src="/./img/mon/20200405141711725.png"></p><p> <strong>重重之重（下图一定要取消安装，compass客户端可视化界面我会另外下载。你要是选中了，那就是安装了一天也完成不了）</strong></p><p><img src= "/img/loading.gif" data-lazy-src="/./img/mon/20200405141917239.png"></p><p> 最后安装成功会弹出一个警告框，选中 Ignore 就好</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/mon/2020040514190079.png"></p><p> 至此，MongoDB客户端已经安装完毕</p><p><strong>由于我们已经创建了C:\MongoDB\data\db文件夹  这里就不需要再创建  否者还要创建  然后在cmd进入C:\MongoDB\bin目录下（在windows资源管理器中shift+右键打开powershell也行）然后执行mongod -dbpath C:\MongoDB\data\db 命令  如下图（这条命令是开启服务，它会一直运行，只要你要使用Mongodb，这个窗口就不能关）</strong></p><p><img src= "/img/loading.gif" data-lazy-src="/./img/mon/20200405142808709.png"></p><pre><code>然后在bin目录下另外打开一个cmd  在bin目录下执行mongo命令，之后就能正常使用了！！！</code></pre><p><img src= "/img/loading.gif" data-lazy-src="/./img/mon/20200405143056560.png"></p><p> 正如你所看到的，以上步骤已经可以完全实现使用MongoDB的需求。你要是想的话可以继续安装可视化界面，毕竟操作起来更方便。</p><h3 id="2-开始安装MongoDB-Compass："><a href="#2-开始安装MongoDB-Compass：" class="headerlink" title="2.开始安装MongoDB Compass："></a>2.开始安装MongoDB Compass：</h3><p>直接解压缩：</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/mon/20200405144015752.png"></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -踩坑 -技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows配置FTP</title>
      <link href="20220517/windows-ftp/"/>
      <url>20220517/windows-ftp/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Windows配置FTP"><a href="#1-Windows配置FTP" class="headerlink" title="1.Windows配置FTP"></a>1.Windows配置FTP</h1><blockquote><p>使用win11的来操作，不过和win10差不多一样。</p><p> 注意：<strong>需要其他电脑能通过访问，必须在一个局域网。</strong></p></blockquote><p>​            </p><p>第一步：找到控制面板，找到程序。</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415161644677.png" alt="image-20220415161644677"></p><p>打开启动或关闭Windows功能，弹出选择如图所示，确认。</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415161856560.png" alt="image-20220415161856560"></p><p>第一次安装可能会重启，重启之后找到IIS服务管理器。（直接搜索iis）</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415162257798.png" alt="image-20220415162257798"></p><p>打开点开找到网站，右键网站选择添加FTP站点，并按照如图所示填写。</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415162638902.png" alt="image-20220415162638902"></p><p>然后下一步，输入自己的本机ip，无ssl。</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415162902342.png" alt="image-20220415162902342"></p><p>然后继续下一页，选择基本的方式，指定用户方式，权限全勾选，完成之后。</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415163133913.png" alt="image-20220415163133913"></p><p>完成后选择基本设置，配置特定用户。</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415163410074.png" alt="image-20220415163410074"></p><p>用户为之前所指定用户账号，点设置并输入此账号登录密码。</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415163558214.png" alt="image-20220415163558214"></p><p>点击测试设置，查看都为绿沟就ok了。</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415163647948.png" alt="image-20220415163647948"></p><h2 id="其他设置点"><a href="#其他设置点" class="headerlink" title="其他设置点:"></a>其他设置点:</h2><p>找到防火墙，控制面板\系统和安全\Windows Defender 防火墙\允许的应用，沟选FTP服务和你刚刚所建FTP全勾上,并把后面的沟上。</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415164010283.png" alt="image-20220415164010283"></p><p>使用cmd打开，输入ftp 本机ip，输入指定账号，密码，如图所示就是成功了。</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415164307698.png" alt="image-20220415164307698"></p><p>然后在文件资源管理器输入 ftp://本机ip 进入到文件夹中。浏览器上输入也可以（第一次都会让你输入用户名和密码，记住之后就可以了吧）</p><p><img src= "/img/loading.gif" data-lazy-src="/./img/lat/image-20220415164552509.png" alt="image-20220415164552509"></p><p>最后打开防火墙配置入站规则，点击高级设置进入，新建规则规则类型选择端口，协议和端口输入之前在ftp默认的21端口</p><p>然后一直下一页就OK了。</p><h1 id="2-nginx映射FTP图片地址"><a href="#2-nginx映射FTP图片地址" class="headerlink" title="2.nginx映射FTP图片地址"></a>2.nginx映射FTP图片地址</h1><blockquote><p>比如nginx文件夹在E盘，ftp或者图片存放在在D盘，前端去加载ftp的图片地址会404；</p></blockquote><h2 id="解决"><a href="#解决" class="headerlink" title="解决:"></a>解决:</h2><p>​            打开nginx  -   conf   -    nginx.conf，添加如下配置。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location /ftp/ &#123;</span><br><span class="line">alias D:\ftp/;     # 当不在同一目录下使用；同一目标使用root</span><br><span class="line">allow all;</span><br><span class="line">autoindex on;</span><br><span class="line">add_header Access-Control-Allow-Origin *;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ps:将root后面的地址改成 root D:\imagedata/; 是不起作用的。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -踩坑 -技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis映射LocalDateTime所出现的问题</title>
      <link href="20210728/Mybatis-jdk8-LocaDateTime/"/>
      <url>20210728/Mybatis-jdk8-LocaDateTime/</url>
      
        <content type="html"><![CDATA[<h2 id="Mybatis映射LocalDateTime所出现的问题"><a href="#Mybatis映射LocalDateTime所出现的问题" class="headerlink" title="Mybatis映射LocalDateTime所出现的问题"></a><strong>Mybatis映射LocalDateTime所出现的问题</strong></h2><p> 使用JDK1.8的LocalDateTime、LocalDate、LocalTime。</p><h4 id="问题点"><a href="#问题点" class="headerlink" title="问题点"></a><strong>问题点</strong></h4><p>在mybatis中传入参数为LocalDateTime，查询返回结果为空。</p><h4 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a><strong>如何解决</strong></h4><p>   mybatis在3.4.6之前是不支持LocalDateTime，所以更改pom.xml文件中mybatis的版本就可以解决。</p>   <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="或者低于3-4-6版本"><a href="#或者低于3-4-6版本" class="headerlink" title="或者低于3.4.6版本"></a><strong>或者低于3.4.6版本</strong></h4><p>   加入如下依赖</p>   <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-typehandlers-jsr310<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   以上仅在mybatis 3.4.0版本中测试有效。</p><p>   ​    </p><h4 id="如果使用的mybatis版本低于3-4-0，则还需要在配置文件添加如下"><a href="#如果使用的mybatis版本低于3-4-0，则还需要在配置文件添加如下" class="headerlink" title="如果使用的mybatis版本低于3.4.0，则还需要在配置文件添加如下:"></a><strong>如果使用的mybatis版本低于3.4.0，则还需要在配置文件添加如下:</strong></h4>   <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeHandlers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;org.apache.ibatis.type.InstantTypeHandler&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;org.apache.ibatis.type.LocalDateTimeTypeHandler&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;org.apache.ibatis.type.LocalDateTypeHandler&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;org.apache.ibatis.type.LocalTimeTypeHandler&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;org.apache.ibatis.type.OffsetDateTimeTypeHandler&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;org.apache.ibatis.type.OffsetTimeTypeHandler&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;org.apache.ibatis.type.ZonedDateTimeTypeHandler&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -踩坑 -技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库如何快速删除千万，亿条数据</title>
      <link href="20210727/mysql-delete-method/"/>
      <url>20210727/mysql-delete-method/</url>
      
        <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a><strong>前情提要</strong></h2><blockquote><p>MySQL数据库因生产原因需要删除大量数据，因数据量太大接近上亿条，用常规delete删除小数据可以，删除几千万大数据量会非常慢，<br>并且不会释放出磁盘空间，还需要optimize或repair来压缩数据表来释放硬盘空间，时间更长，需要几天时间，太慢了！<br>因此采用新建表，导入无需删除的数据，然后删除老表，把新表改名为老表，步骤如下：</p></blockquote><p><strong>1.基于原表新建新表。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> table_2 <span class="keyword">like</span> table_1;</span><br></pre></td></tr></table></figure><p><strong>2.原表数据插入到新表（几千万数据可以分批插入，一次插入50万最佳，mysql的数据处理能力也是有限的），可以根据where条件查询后插入！</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_2 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_1 <span class="keyword">where</span> id<span class="operator">&gt;</span><span class="number">500000</span> <span class="keyword">and</span> id<span class="operator">&lt;=</span><span class="number">550000</span>;</span><br></pre></td></tr></table></figure><p>​      可以选择对自己有用的数据插入新表！</p><p><strong>3.drop删除原表</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> table_1;</span><br></pre></td></tr></table></figure><p><strong>4.重命名新表为”<strong>table_2</strong>“</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_2 rename <span class="keyword">to</span> table_1;</span><br></pre></td></tr></table></figure><p>以上就是快速删除操作流程!</p>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -踩坑 -技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录音乐配置在hexo-buffter</title>
      <link href="20210710/music/"/>
      <url>20210710/music/</url>
      
        <content type="html"><![CDATA[<blockquote><p>hexo音乐插件 <a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a><br>或者看<a href="https://links.jianshu.com/go?to=https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a></p></blockquote><h3 id="1-在md文件使用"><a href="#1-在md文件使用" class="headerlink" title="1.在md文件使用:"></a>1.在md文件使用:</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;000PeZCQ1i4XVs&quot; &quot;tencent&quot; &quot;artist&quot; &quot;theme:#3F51B5&quot; &quot;mutex:true&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><h3 id="2-使用html"><a href="#2-使用html" class="headerlink" title="2.使用html:"></a>2.使用html:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;aplayer no-destroy&quot;</span> <span class="attr">data-id</span>=<span class="string">&quot;000PeZCQ1i4XVs&quot;</span> <span class="attr">data-server</span>=<span class="string">&quot;tencent&quot;</span> <span class="attr">data-type</span>=<span class="string">&quot;artist&quot;</span> <span class="attr">data-fixed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-mini</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-listFolded</span>=<span class="string">&quot;false&quot;</span> <span class="attr">data-order</span>=<span class="string">&quot;random&quot;</span> <span class="attr">data-preload</span>=<span class="string">&quot;none&quot;</span> <span class="attr">data-autoplay</span>=<span class="string">&quot;false&quot;</span> <span class="attr">muted</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-配置全局吸底"><a href="#3-配置全局吸底" class="headerlink" title="3.配置全局吸底"></a>3.配置全局吸底</h3><blockquote><p>在主题配置文件中找到 <strong>aplayerInject</strong>,<strong>enable</strong>设为<strong>true</strong>和<strong>per_page</strong>设为<strong>true</strong></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>在hexo配置文件中找到 <strong>aplayer</strong></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><blockquote><p>把aplayer代碼插入到主題配置文件的<strong>inject.bottom</strong>去<br> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;000PeZCQ1i4XVs&quot;</span> <span class="string">data-server=&quot;tencent&quot;</span> <span class="string">data-type=&quot;artist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-mini=&quot;true&quot;</span> <span class="string">data-listFolded=&quot;false&quot;</span> <span class="string">data-order=&quot;random&quot;</span> <span class="string">data-preload=&quot;none&quot;</span> <span class="string">data-autoplay=&quot;true&quot;</span> <span class="string">muted&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="调整位置"><a href="#调整位置" class="headerlink" title="调整位置"></a>调整位置</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#toggle-sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">80px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>最后，如果你想切换页面时,音乐不会中断。就把主题配置文件的<strong>pjax</strong>改为<strong>true</strong></p></blockquote><h3 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h3><table><thead><tr><th align="left">选项</th><th align="left">默认</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">data-id</td><td align="left">必须值</td><td align="left">歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td align="left">data-server</td><td align="left">必须值</td><td align="left">音乐平台: netease, tencent, kugou, xiami, baidu</td></tr><tr><td align="left">data-type</td><td align="left">必须值</td><td align="left">song, playlist, album, search, artist</td></tr><tr><td align="left">data-fixed</td><td align="left">false</td><td align="left">开启固定模式</td></tr><tr><td align="left">data-mini</td><td align="left">false</td><td align="left">开启迷你模式</td></tr><tr><td align="left">data-autoplay</td><td align="left">false</td><td align="left">自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td align="left">data-theme</td><td align="left">#2980b9</td><td align="left">主题颜色</td></tr><tr><td align="left">data-loop</td><td align="left">all</td><td align="left">列表循环模式：all, one,none</td></tr><tr><td align="left">data-order</td><td align="left">list</td><td align="left">列表播放模式： list, random</td></tr><tr><td align="left">data-preload</td><td align="left">auto</td><td align="left">values: ‘none’, ‘metadata’, ‘auto</td></tr><tr><td align="left">data-volume</td><td align="left">0.7</td><td align="left">播放器音量</td></tr><tr><td align="left">data-mutex</td><td align="left">true</td><td align="left">该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td align="left">data-lrctype</td><td align="left">0</td><td align="left">歌词格式类型</td></tr><tr><td align="left">data-listfolded</td><td align="left">false</td><td align="left">指定音乐播放列表是否折叠</td></tr><tr><td align="left">data-listmaxheight</td><td align="left">340px</td><td align="left">播放列表的最大长度</td></tr><tr><td align="left">data-storagename</td><td align="left">metingjs</td><td align="left">LocalStorage 中存储播放器设定的键名</td></tr></tbody></table><blockquote><p>require代表着這些參數是必須要使用的，其它的參數則可以根據自己需要配置。</p></blockquote><blockquote><p>配置全局吸底，data-fixed和data-mini也必須配置，配置為true</p></blockquote><blockquote><p>如果使用Pjax，則在class裏需添加no-destroy，這樣防止切換頁面時Aplayer被銷毀</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> music </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -music -音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>李知恩的男盆友</title>
      <link href="20210415/iu-BoyFriend/"/>
      <url>20210415/iu-BoyFriend/</url>
      
        <content type="html"><![CDATA[<p>李知恩的男朋友出现了！<br>李知恩的男朋友出现了！</p>]]></content>
      
      
      <categories>
          
          <category> iu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -iu -男盆友 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="20210413/hello-world/"/>
      <url>20210413/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a> </p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hello-world </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -IU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐一个图片网站</title>
      <link href="20210413/images/"/>
      <url>20210413/images/</url>
      
        <content type="html"><![CDATA[<h3 id="存几个个图片网站"><a href="#存几个个图片网站" class="headerlink" title="存几个个图片网站."></a>存几个个图片网站.</h3><p>   宝藏地址:<br>   1.<a href="https://wallhaven.cc/">https://wallhaven.cc/</a><br>   <a href="https://imgtu.com/i/RHO0r6"><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/07/07/RHO0r6.png" alt="RHO0r6.png"></a><br>   2.<a href="https://unsplash.com/">https://unsplash.com/</a><br>   <a href="https://imgtu.com/i/RHOwKx"><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/07/07/RHOwKx.png" alt="RHOwKx.png"></a><br>   3.<a href="https://wallpapercave.com/">https://wallpapercave.com/</a><br>   <a href="https://imgtu.com/i/RHOax1"><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/07/07/RHOax1.png" alt="RHOax1.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> image </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -image </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IU</title>
      <link href="20210413/iu/"/>
      <url>20210413/iu/</url>
      
        <content type="html"><![CDATA[<div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="http://xiaozhidage.gitee.io/image_treasure-house/IU/1345249383.jpeg"></p>          </div>]]></content>
      
      
      <categories>
          
          <category> iu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -iu </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
